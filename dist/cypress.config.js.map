{"version":3,"sources":["cypress.config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACnC,mCAAuC;AACvC,yFAAwF;AACxF,IAAM,YAAY,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAC;AACxE,iFAA4E;AAC5E,IAAM,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAChD,IAAM,WAAW,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACrD,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAEzB,kCAAkC;AAClC,8BAA8B;AAC9B,wCAAwC;AACxC,4CAA4C;AAC5C,2GAA2G;AAC3G,qDAAqD;AACrD,QAAQ;AACR,2BAA2B;AAC3B,2BAA2B;AAC3B,mDAAmD;AACnD,SAAS;AACT,OAAO;AAEP,+CAA+C;AAC/C,uBAAuB;AAEvB,2FAA2F;AAC3F,mBAAmB;AACnB,IAAI;AAEJ,SAAe,eAAe,CAAC,EAAE,EAAE,MAAM;;;;;;oBACvC,MAAM,CAAC,EAAE,GAAG;wBACV,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,cAAc;wBACxB,MAAM,EAAE,+CAA+C;wBACvD,OAAO,EAAE;4BACP,QAAQ,EAAE,yBAAyB;4BACnC,OAAO,EAAE,IAAI;4BACb,gCAAgC,EAAE,IAAI;yBACvC;qBACF,CAAC;oBACF,sGAAsG;oBACtG,qBAAM,6DAA6B,CAAC,EAAE,EAAE,MAAM,CAAC,EAAA;;oBAD/C,sGAAsG;oBACtG,SAA+C,CAAC;oBAChD,EAAE,CACA,mBAAmB,EACnB,uBAAU,CAAC,MAAM,EAAE;wBACjB,UAAU,EAAE,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;qBAC1C,CAAC,CACH,CAAC;oBAEI,KAAK,GAAG,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAChD,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;oBAElB,EAAE,CAAC,MAAM,EAAE;wBACT,oBAAoB,YAAC,QAAQ;4BAC3B,IAAM,MAAM,GAAG,WAAW,CAAC;gCACzB,MAAM,EAAE,EAAE,CAAC,YAAY,CACrB,+CAA+C,CAChD;6BACF,CAAC,CAAC;4BACH,OAAO,MAAM,CAAC;wBAChB,CAAC;qBACF,CAAC,CAAC;oBAEH,EAAE,CAAC,MAAM,EAAE;wBACT,GAAG,YAAC,OAAO;4BACT,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;4BACrB,OAAO,IAAI,CAAC;wBACd,CAAC;qBACF,CAAC,CAAC;oBAEH,sFAAsF;oBACtF,sBAAO,MAAM,EAAC;;;;CACf;AAED,qBAAe,sBAAY,CAAC;IAC1B,qBAAqB,EAAE,KAAK;IAC5B,GAAG,EAAE;QACH,GAAG,EAAE,gCAAgC;QACrC,KAAK,EAAE;YACL,KAAK,EAAE;gBACL,EAAE,EAAE,EAAE;aACP;SACF;KACF;IACD,GAAG,EAAE;QACH,OAAO,EAAE,gCAAgC;QACzC,eAAe,iBAAA;QACf,oDAAoD;QACpD,WAAW,EAAE,mCAAmC;KACjD;IACD,SAAS,EAAE,QAAQ;IACnB,OAAO,EAAE;QACP,OAAO,EAAE,CAAC;KACX;CACF,CAAC,CAAC","file":"cypress.config.js","sourcesContent":["const cypress = require(\"cypress\");\r\nimport { defineConfig } from \"cypress\";\r\nimport { addCucumberPreprocessorPlugin } from \"@badeball/cypress-cucumber-preprocessor\";\r\nconst preprocessor = require(\"@badeball/cypress-cucumber-preprocessor\");\r\nimport browserify from \"@badeball/cypress-cucumber-preprocessor/browserify\";\r\nconst sqlServer = require(\"cypress-sql-server\");\r\nconst excelToJson = require(\"convert-excel-to-json\");\r\nconst fs = require(\"fs\");\r\n\r\n// async function setupNodeEvents(\r\n//   on: Cypress.PluginEvents,\r\n//   config: Cypress.PluginConfigOptions\r\n// ): Promise<Cypress.PluginConfigOptions> {\r\n//   // This is required for the preprocessor to be able to generate JSON reports after each run, and more,\r\n//   await addCucumberPreprocessorPlugin(on, config);\r\n//   on(\r\n//     \"file:preprocessor\",\r\n//     browserify(config, {\r\n//       typescript: require.resolve(\"typescript\"),\r\n//     })\r\n//   );\r\n\r\n//   tasks = sqlServer.loadDBPlugin(config.db);\r\n//   on(\"task\", tasks);\r\n\r\n//   // Make sure to return the config object as it might have been modified by the plugin.\r\n//   return config;\r\n// }\r\n\r\nasync function setupNodeEvents(on, config) {\r\n  config.db = {\r\n    userName: \"cypressadmin\",\r\n    password: \"Newuser@1234\",\r\n    server: \"azure-cypress-sql-server.database.windows.net\",\r\n    options: {\r\n      database: \"AzureCypressSQLDatabase\",\r\n      encrypt: true,\r\n      rowCollectionOnRequestCompletion: true,\r\n    },\r\n  };\r\n  // This is required for the preprocessor to be able to generate JSON reports after each run, and more,\r\n  await addCucumberPreprocessorPlugin(on, config);\r\n  on(\r\n    \"file:preprocessor\",\r\n    browserify(config, {\r\n      typescript: require.resolve(\"typescript\"),\r\n    })\r\n  );\r\n\r\n  const tasks = sqlServer.loadDBPlugin(config.db);\r\n  on(\"task\", tasks);\r\n\r\n  on(\"task\", {\r\n    excelToJsonConverter(filePath) {\r\n      const result = excelToJson({\r\n        source: fs.readFileSync(\r\n          \"cypress/downloads/order-invoice_fagun.qa.xlsx\"\r\n        ), // fs.readFileSync return a Buffer\r\n      });\r\n      return result;\r\n    },\r\n  });\r\n\r\n  on(\"task\", {\r\n    log(message) {\r\n      console.log(message);\r\n      return null;\r\n    },\r\n  });\r\n\r\n  // Make sure to return the config object as it might have been modified by the plugin.\r\n  return config;\r\n}\r\n\r\nexport default defineConfig({\r\n  defaultCommandTimeout: 15000,\r\n  env: {\r\n    url: \"https://rahulshettyacademy.com\",\r\n    users: {\r\n      user1: {\r\n        id: \"\"\r\n      }\r\n    },\r\n  },\r\n  e2e: {\r\n    baseUrl: \"https://rahulshettyacademy.com\",\r\n    setupNodeEvents,\r\n    // specPattern: 'cypress/integration/examples/*.ts',\r\n    specPattern: \"cypress/integration/examples/*.ts\",\r\n  },\r\n  projectId: \"5e8n7q\",\r\n  retries: {\r\n    runMode: 0,\r\n  },\r\n});\r\n"]}