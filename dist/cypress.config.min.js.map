{"version":3,"sources":["cypress.config.ts"],"names":["cypress","require","cypress_1","cypress_cucumber_preprocessor_1","preprocessor","browserify_1","sqlServer","excelToJson","fs","setupNodeEvents","on","config","db","userName","password","server","options","database","encrypt","rowCollectionOnRequestCompletion","addCucumberPreprocessorPlugin","_a","sent","typescript","resolve","tasks","loadDBPlugin","excelToJsonConverter","filePath","source","readFileSync","log","message","console","exports","defineConfig","defaultCommandTimeout","env","url","user1","user2","user3","user4","e2e","baseUrl","specPattern","projectId","retries","runMode"],"mappings":"y7CAAA,IAAMA,QAAUC,QAAQ,WACxBC,UAAAD,QAAA,WACAE,gCAAAF,QAAA,2CACMG,aAAeH,QAAQ,2CAC7BI,aAAAJ,QAAA,sDACMK,UAAYL,QAAQ,sBACpBM,YAAcN,QAAQ,yBACtBO,GAAKP,QAAQ,MAsBnB,SAAeQ,gBAAgBC,EAAIC,mHAYjC,OAXAA,EAAOC,GAAK,CACVC,SAAU,eACVC,SAAU,eACVC,OAAQ,gDACRC,QAAS,CACPC,SAAU,0BACVC,SAAS,EACTC,kCAAkC,IAItC,CAAA,EAAMhB,gCAAAiB,8BAA8BV,EAAIC,WA8BxC,OA9BAU,EAAAC,OACAZ,EACE,oBACAL,aAAA,QAAWM,EAAQ,CACjBY,WAAYtB,QAAQuB,QAAQ,iBAI1BC,EAAQnB,UAAUoB,aAAaf,EAAOC,IAC5CF,EAAG,OAAQe,GAEXf,EAAG,OAAQ,CACTiB,qBAAoB,SAACC,GAMnB,OALerB,YAAY,CACzBsB,OAAQrB,GAAGsB,aACT,sDAORpB,EAAG,OAAO,CACRqB,IAAG,SAACC,GAEF,OADAC,QAAQF,IAAIC,GACL,QAKX,CAAA,EAAOrB,QAGTuB,QAAA,QAAehC,UAAAiC,aAAa,CAC1BC,sBAAuB,KACvBC,IAAK,CACHC,IAAK,iCACLC,MAAM,GACNC,MAAM,GACNC,MAAM,GACNC,MAAM,IAERC,IAAK,CACHC,QAAS,iCACTnC,gBAAeA,gBAEfoC,YAAa,qCAEfC,UAAW,SACXC,QAAS,CACPC,QAAS","file":"cypress.config.min.js","sourcesContent":["const cypress = require(\"cypress\");\r\nimport { defineConfig } from \"cypress\";\r\nimport { addCucumberPreprocessorPlugin } from \"@badeball/cypress-cucumber-preprocessor\";\r\nconst preprocessor = require(\"@badeball/cypress-cucumber-preprocessor\");\r\nimport browserify from \"@badeball/cypress-cucumber-preprocessor/browserify\";\r\nconst sqlServer = require(\"cypress-sql-server\");\r\nconst excelToJson = require(\"convert-excel-to-json\");\r\nconst fs = require(\"fs\");\r\n\r\n// async function setupNodeEvents(\r\n//   on: Cypress.PluginEvents,\r\n//   config: Cypress.PluginConfigOptions\r\n// ): Promise<Cypress.PluginConfigOptions> {\r\n//   // This is required for the preprocessor to be able to generate JSON reports after each run, and more,\r\n//   await addCucumberPreprocessorPlugin(on, config);\r\n//   on(\r\n//     \"file:preprocessor\",\r\n//     browserify(config, {\r\n//       typescript: require.resolve(\"typescript\"),\r\n//     })\r\n//   );\r\n\r\n//   tasks = sqlServer.loadDBPlugin(config.db);\r\n//   on(\"task\", tasks);\r\n\r\n//   // Make sure to return the config object as it might have been modified by the plugin.\r\n//   return config;\r\n// }\r\n\r\nasync function setupNodeEvents(on, config) {\r\n  config.db = {\r\n    userName: \"cypressadmin\",\r\n    password: \"Newuser@1234\",\r\n    server: \"azure-cypress-sql-server.database.windows.net\",\r\n    options: {\r\n      database: \"AzureCypressSQLDatabase\",\r\n      encrypt: true,\r\n      rowCollectionOnRequestCompletion: true,\r\n    },\r\n  };\r\n  // This is required for the preprocessor to be able to generate JSON reports after each run, and more,\r\n  await addCucumberPreprocessorPlugin(on, config);\r\n  on(\r\n    \"file:preprocessor\",\r\n    browserify(config, {\r\n      typescript: require.resolve(\"typescript\"),\r\n    })\r\n  );\r\n\r\n  const tasks = sqlServer.loadDBPlugin(config.db);\r\n  on(\"task\", tasks);\r\n\r\n  on(\"task\", {\r\n    excelToJsonConverter(filePath) {\r\n      const result = excelToJson({\r\n        source: fs.readFileSync(\r\n          \"cypress/downloads/order-invoice_fagun.qa.xlsx\"\r\n        ), // fs.readFileSync return a Buffer\r\n      });\r\n      return result\r\n    },\r\n  });\r\n\r\n  on(\"task\",{\r\n    log(message){\r\n      console.log(message)\r\n      return null\r\n    }\r\n  })\r\n\r\n  // Make sure to return the config object as it might have been modified by the plugin.\r\n  return config;\r\n}\r\n\r\nexport default defineConfig({\r\n  defaultCommandTimeout: 15000,\r\n  env: {\r\n    url: \"https://rahulshettyacademy.com\",\r\n    user1:\"\",\r\n    user2:\"\",\r\n    user3:\"\",\r\n    user4:\"\",\r\n  },\r\n  e2e: {\r\n    baseUrl: \"https://rahulshettyacademy.com\",\r\n    setupNodeEvents,\r\n    // specPattern: 'cypress/integration/examples/*.ts',\r\n    specPattern: \"cypress/integration/examples/*.ts\",\r\n  },\r\n  projectId: \"5e8n7q\",\r\n  retries: {\r\n    runMode: 0,\r\n  },\r\n});\r\n"]}