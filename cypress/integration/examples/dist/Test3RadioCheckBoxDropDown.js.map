{"version":3,"sources":["Test3RadioCheckBoxDropDown.ts"],"names":[],"mappings":"AAAA,iCAAiC;AACjC,QAAQ,CAAC,eAAe,EAAE;IACxB,EAAE,CAAC,iDAAiD,EAAE;QACpD,EAAE,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;QAE/D,sBAAsB;QACtB,6BAA6B;QAC7B,aAAa;QACb,0BAA0B;QAC1B,6GAA6G;QAC7G,iEAAiE;QACjE,2EAA2E;QAC3E,6EAA6E;QAC7E,8FAA8F;QAE9F,gCAAgC;QAChC,iGAAiG;QACjG,oCAAoC;QACpC,uBAAuB;QACvB,kEAAkE;QAElE,iCAAiC;QACjC,uCAAuC;QACvC,mEAAmE;QACnE,kCAAkC;QAClC,4BAA4B;QAC5B,MAAM;QACN,MAAM;QACN,yDAAyD;QAEzD,0BAA0B;QAC1B,iDAAiD;QACjD,kCAAkC;QAClC,qDAAqD;QACrD,kCAAkC;QAClC,iDAAiD;QAEjD,6BAA6B;QAC7B,+DAA+D;QAC/D,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;QAC3B,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3C,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACtC,4CAA4C;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"Test3RadioCheckBoxDropDown.js","sourcesContent":["/// <reference types=\"Cypress\" />\r\ndescribe(\"My First Test\", () => {\r\n  it(\"RadioButton, CheckBox, DropDowns Dynamic/Static\", () => {\r\n    cy.visit(\"https://rahulshettyacademy.com/AutomationPractice/\");\r\n\r\n    // Checkbox Operations\r\n    // cy.get(\"#checkBoxOption1\")\r\n    //   .check()\r\n    //   .should(\"be.checked\")\r\n    //   .and(\"have.value\", \"option1\"); //For behavior check use be and for value and other verification use have\r\n    // cy.get(\"#checkBoxOption1\").uncheck().should(\"not.be.checked\");\r\n    // cy.get('input[type=\"checkbox\"]').check(); //Check All checkboxes on page\r\n    // cy.get('input[type=\"checkbox\"]').uncheck(); //Check All checkboxes on page\r\n    // cy.get('input[type=\"checkbox\"]').check([\"option2\", \"option3\"]); //Check Selected Checkboxes\r\n\r\n    // // Static Dropdown Operations\r\n    // cy.get(\"#dropdown-class-example\").select(1); //Select option using Index -> index start from 1\r\n    // cy.get(\"#dropdown-class-example\")\r\n    //   .select(\"option3\")\r\n    //   .should(\"have.value\", \"option3\"); //Select option using value\r\n\r\n    // // Dynamic Dropdown Operations\r\n    // cy.get(\"#autocomplete\").type(\"ind\");\r\n    // cy.get(\".ui-menu-item div\").each(($el, index, $elementList) => {\r\n    //   if ($el.text() === \"India\") {\r\n    //     cy.wrap($el).click();\r\n    //   }\r\n    // });\r\n    // cy.get(\"#autocomplete\").should(\"have.value\", \"India\");\r\n\r\n    // // Hide Show Componenet\r\n    // cy.get('#displayed-text').should('be.visible')\r\n    // cy.get('#hide-textbox').click()\r\n    // cy.get('#displayed-text').should('not.be.visible')\r\n    // cy.get('#show-textbox').click()\r\n    // cy.get('#displayed-text').should('be.visible')\r\n\r\n    // // Radio Button Operations\r\n    // cy.get('input[value=\"radio1\"]').click().should('be.checked')\r\n    const envs = Cypress.env();\r\n    cy.task(\"log\", \"Admin User: \", envs[\"users\"]);\r\n    console.log(\"Admin User: \", envs[\"users\"]);\r\n    cy.log(\"Admin User: \", envs[\"users\"]);\r\n    // cy.task(\"log\", process.env[\"ADMIN_USER\"])\r\n  });\r\n});\r\n"]}