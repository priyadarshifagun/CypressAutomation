{"version":3,"sources":["Test3RadioCheckBoxDropDown.ts"],"names":[],"mappings":"AAAA,iCAAiC;AAEjC,QAAQ,CAAC,eAAe,EAAE;IACxB,EAAE,CAAC,iDAAiD,EAAE;QACpD,EAAE,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;QAE/D,sBAAsB;QACtB,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC;aACvB,KAAK,EAAE;aACP,MAAM,CAAC,YAAY,CAAC;aACpB,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC,yEAAyE;QAC1G,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAC9D,EAAE,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,8BAA8B;QACxE,EAAE,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,8BAA8B;QAC1E,EAAE,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,2BAA2B;QAE3F,6BAA6B;QAC7B,EAAE,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,iDAAiD;QAC9F,EAAE,CAAC,GAAG,CAAC,yBAAyB,CAAC;aAC9B,MAAM,CAAC,SAAS,CAAC;aACjB,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC,2BAA2B;QAE/D,8BAA8B;QAC9B,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,EAAE,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,EAAE,KAAK,EAAE,YAAY;YACxD,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,OAAO,EAAE;gBAC1B,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QAEtD,uBAAuB;QACvB,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAA;QAC9C,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAA;QAC/B,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAA;QAClD,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAA;QAC/B,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAA;QAE9C,0BAA0B;QAC1B,EAAE,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAA;IAEhE,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC","file":"Test3RadioCheckBoxDropDown.js","sourcesContent":["/// <reference types=\"Cypress\" />\r\n\r\ndescribe(\"My First Test\", () => {\r\n  it(\"RadioButton, CheckBox, DropDowns Dynamic/Static\", () => {\r\n    cy.visit(\"https://rahulshettyacademy.com/AutomationPractice/\");\r\n\r\n    // Checkbox Operations\r\n    cy.get(\"#checkBoxOption1\")\r\n      .check()\r\n      .should(\"be.checked\")\r\n      .and(\"have.value\", \"option1\"); //For behavior check use be and for value and other verification use have\r\n    cy.get(\"#checkBoxOption1\").uncheck().should(\"not.be.checked\");\r\n    cy.get('input[type=\"checkbox\"]').check(); //Check All checkboxes on page\r\n    cy.get('input[type=\"checkbox\"]').uncheck(); //Check All checkboxes on page\r\n    cy.get('input[type=\"checkbox\"]').check([\"option2\", \"option3\"]); //Check Selected Checkboxes\r\n\r\n    // Static Dropdown Operations\r\n    cy.get(\"#dropdown-class-example\").select(1); //Select option using Index -> index start from 1\r\n    cy.get(\"#dropdown-class-example\")\r\n      .select(\"option3\")\r\n      .should(\"have.value\", \"option3\"); //Select option using value\r\n\r\n    // Dynamic Dropdown Operations\r\n    cy.get(\"#autocomplete\").type(\"ind\");\r\n    cy.get(\".ui-menu-item div\").each(($el, index, $elementList) => {\r\n      if ($el.text() === \"India\") {\r\n        cy.wrap($el).click();\r\n      }\r\n    });\r\n    cy.get(\"#autocomplete\").should(\"have.value\", \"India\");\r\n\r\n    // Hide Show Componenet\r\n    cy.get('#displayed-text').should('be.visible')\r\n    cy.get('#hide-textbox').click()\r\n    cy.get('#displayed-text').should('not.be.visible')\r\n    cy.get('#show-textbox').click()\r\n    cy.get('#displayed-text').should('be.visible')\r\n\r\n    // Radio Button Operations\r\n    cy.get('input[value=\"radio1\"]').click().should('be.checked')\r\n\r\n});\r\n});\r\n"]}