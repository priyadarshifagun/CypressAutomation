{"version":3,"sources":["EXCEL_VERIFY.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,WAAW,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACrD,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACzB,aAAa;AAEb,QAAQ,CAAC,cAAc,EAAE;IACvB,EAAE,CAAC,+BAA+B,EAAE;;;YAGlC,aAAa;YACb,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBACjB,EAAE,CAAC,KAAK,CAAC,uCAAuC,EAAE;oBAChD,YAAY,EAAE,UAAU,MAAM;wBAC5B,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC7D,CAAC;iBACF,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YACvD,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC;iBACnB,EAAE,CAAC,CAAC,CAAC;iBACL,IAAI,CAAC,UAAC,OAAO;gBACZ,QAAQ,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;YACL,EAAE,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC,KAAK,EAAE,CAAC;YACvD,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;YAEhC,EAAE,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1D,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACb,EAAE,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,EAAE,KAAK,EAAE,KAAK;gBACvD,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,OAAO,EAAE;oBACjC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;iBACtB;YACH,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE,CAAC;YAClC,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE;gBACvC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YACxE,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,QAAQ,CAAC,0CAA0C,CAAC,CAAC,KAAK,EAAE,CAAC;YAChE,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;YACnC,+BAA+B;YAC/B,iHAAiH;YACjH,MAAM;YACN,EAAE,CAAC,IAAI,CACL,sBAAsB,EACtB,+CAA+C,CAChD,CAAC,IAAI,CAAC,UAAU,MAAM;gBACrB,aAAa;gBACb,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,aAAa;gBACb,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAC7C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,QAAQ,CAAC,+CAA+C,CAAC,CAAC,IAAI,CAAC,UAAS,IAAI;gBAC7E,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;YACnC,CAAC,CAAC,CAAA;;;SAMH,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"EXCEL_VERIFY.js","sourcesContent":["/// <reference types=\"Cypress\" />\r\nimport neatCsv from \"neat-csv\";\r\nconst excelToJson = require(\"convert-excel-to-json\");\r\nconst fs = require(\"fs\");\r\n// @ts-ignore\r\n\r\ndescribe(\"Verify Excel\", () => {\r\n  it(\"Inject Token And Verify Excel\", async () => {\r\n    //Call the custom command LoginAPI() to get the token\r\n    var prodText;\r\n    // @ts-ignore\r\n    cy.LoginAPI().then(function () {\r\n      cy.visit(\"https://rahulshettyacademy.com/client\", {\r\n        onBeforeLoad: function (window) {\r\n          window.localStorage.setItem(\"token\", Cypress.env(\"token\"));\r\n        },\r\n      });\r\n    });\r\n    cy.get(\".card-body button:last-of-type\").eq(0).click();\r\n    cy.get(\".card-body b\")\r\n      .eq(0)\r\n      .then((element) => {\r\n        prodText = element.text();\r\n      });\r\n    cy.get('button[routerlink=\"/dashboard/cart\"]').click();\r\n    cy.contains(\"Checkout\").click();\r\n    \r\n    cy.get('input[placeholder=\"Select Country\"]').type(\"Ind\");\r\n    cy.wait(2000)\r\n    cy.get(\".ta-results button span\").each(($el, index, $list) => {\r\n      if ($el.text().trim() === \"India\") {\r\n        cy.wrap($el).click();\r\n      }\r\n    });\r\n    cy.get(\".action__submit\").click();\r\n    cy.get(\".hero-primary\").then(function (el) {\r\n      expect(el.text().toUpperCase()).to.include(\"THANKYOU FOR THE ORDER.\");\r\n    });\r\n    cy.contains(\"Click To Download Order Details in Excel\").click();\r\n    Cypress.config(\"fileServerFolder\");\r\n    // const result = excelToJson({\r\n    //   source: fs.readFileSync(\"cypress/downloads/order-invoice_fagun.qa.xlsx\"), // fs.readFileSync return a Buffer\r\n    // });\r\n    cy.task(\r\n      \"excelToJsonConverter\",\r\n      \"cypress/downloads/order-invoice_fagun.qa.xlsx\"\r\n    ).then(function (result) {\r\n      // @ts-ignore\r\n      console.log(result.data[0]);\r\n      // @ts-ignore\r\n      expect(prodText).to.equal(result.data[1].B)\r\n    });\r\n\r\n    cy.readFile(\"cypress/downloads/order-invoice_fagun.qa.xlsx\").then(function(text){\r\n      expect(text).to.include(prodText)\r\n    })\r\n\r\n    // Browser(JS Engine) -> JS Code -> Client Side Environment (Front End)\r\n    // Node (Engine) -> JS Code -> Backend applications/environment\r\n    // Node Supports Accessing file system - fs, Database\r\n    // Cypress doesnt support fs and should be configured as tasks => Tasks(fs,db) in config.js/.ts\r\n  });\r\n});\r\n"]}