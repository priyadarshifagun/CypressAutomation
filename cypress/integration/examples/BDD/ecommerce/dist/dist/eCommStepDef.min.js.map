{"version":3,"sources":["eCommStepDef.ts"],"names":["cypress_cucumber_preprocessor_1","require","HomePage_1","ProductPage_1","Given","cy","visit","Cypress","env","When","data","productPage","fixture","then","fData","console","log","getShopLink","click","_i","_a","productName","length","value","addProductToCart","getCheckOutTab","total","get","each","$el","index","$list","amount","text","replace","Number","totalText","expect","includes","toString","getCheckOutButton","Then","getCountryDropDown","type","getDisplayedCountry","getIAgreeCheckBox","check","force","getPurchaseButton","getSuccessMessage","textMessage","message","to","be","homePage","getNameTextBox","name","getTwoWayBindingEditBox","should","getEmailTextBox","email","getPasswordTextBox","password","getCheckBox","getGenderDropDown","select","gender","getStudentRadioButton","getEntrepreneurRadioButton"],"mappings":"mCAEA,IAAAA,gCAAAC,QAAA,2CACAC,WAAAD,QAAA,iCACAE,cAAAF,QAAA,oCAEAD,gCAAAI,MAAM,wBAAyB,WAC7BC,GAAGC,MAASC,QAAQC,IAAI,OAAM,uBAGhCR,gCAAAS,KAAK,yBAA0B,WAC7B,IACIC,EADEC,EAAc,IAAIR,cAAA,QAExBE,GAAGO,QAAQ,iBAAiBC,KAAK,SAAUC,GACzCJ,EAAOI,EACPC,QAAQC,IAAIN,KAEdC,EAAYM,cAAcC,QAC1B,IAAkB,IAAAC,EAAA,EAAAC,EAAAV,EAAKW,YAALF,EAAAC,EAAAE,OAAAH,IAAkB,CAA/B,IAAII,EAAKH,EAAAD,GACZd,GAAGmB,iBAAiBD,GAEtBZ,EAAYc,iBAAiBP,UAG/BlB,gCAAAS,KAAK,yBAA0B,WAC7B,IAAME,EAAc,IAAIR,cAAA,QAEpBuB,EAAgB,EACpBrB,GAAGsB,IAAI,mCAAmCC,KAAK,SAACC,EAAKC,EAAOC,GAC1D,IAAMC,EAASH,EAAII,OAAOC,QAAQ,gBAAiB,IACnD7B,GAAGW,IAAIgB,GACPN,GAAgBS,OAAOH,KAOzB3B,GAAGsB,IAAI,eAAed,KAAK,SAACuB,GAC1BC,OAAOD,EAAUH,QAAQK,SAASZ,EAAMa,cAE1C5B,EAAY6B,oBAAoBtB,UAGlClB,gCAAAyC,KAAK,oBAAqB,WACxB,IAAM9B,EAAc,IAAIR,cAAA,QACxBQ,EAAY+B,qBAAqBC,KAAK,SACtChC,EAAYiC,sBAAsB1B,QAClCP,EAAYkC,oBAAoBC,MAAM,CAAEC,OAAO,IAC/CpC,EAAYqC,oBAAoB9B,QAChCP,EAAYsC,oBAAoBpC,KAAK,SAACqC,GACpC,IAAMC,EAAUD,EAAYjB,OAC5BI,OAAOc,EAAQb,SAAS,aAAac,GAAGC,GAAxC,SAIJrD,gCAAAS,KAAK,kBAAmB,WACtB,IAAM6C,EAAW,IAAIpD,WAAA,QACrBoD,EAASC,iBAAiBZ,KAAKjC,KAAK8C,MACpCF,EAASG,0BAA0BC,OAAO,aAAchD,KAAK8C,MAC7DF,EAASC,iBAAiBG,OAAO,YAAa,YAAa,KAC3DJ,EAASK,kBAAkBhB,KAAKjC,KAAKkD,OACrCN,EAASO,qBAAqBlB,KAAKjC,KAAKoD,UACxCR,EAASS,cAAcjB,UAGzB9C,gCAAAS,KAAK,2BAA4B,WAC/B,IAAM6C,EAAW,IAAIpD,WAAA,QAOrB,OANAoD,EACGU,oBACAC,OAAOvD,KAAKwD,QACZR,OAAO,aAAchD,KAAKwD,QAC7BZ,EAASa,wBAAwBjD,QACjCoC,EAASc,6BAA6BV,OAAO,gBACtC,IAGT1D,gCAAAyC,KAAK,oBAAqB,WACxB,OAAO","file":"eCommStepDef.min.js","sourcesContent":["/// <reference types=\"Cypress\" />\r\n\r\nimport { Given, When, Then } from \"@badeball/cypress-cucumber-preprocessor\";\r\nimport HomePage from \"../../../pageObjects/HomePage\";\r\nimport ProductPage from \"../../../pageObjects/ProductPage\";\r\n\r\nGiven(\"I open ecommerce page\", function () {\r\n  cy.visit(`${Cypress.env(\"url\")}/angularpractice/`);\r\n});\r\n\r\nWhen(\"I add products to cart\", () => {\r\n  const productPage = new ProductPage();\r\n  let data;\r\n  cy.fixture(\"FormData.json\").then(function (fData) {\r\n    data = fData;\r\n    console.log(data)\r\n  });\r\n  productPage.getShopLink().click();\r\n  for (let value of data.productName) {\r\n    cy.addProductToCart(value); //Custom Command\r\n  }\r\n  productPage.getCheckOutTab().click();\r\n});\r\n\r\nWhen(\"I validate total price\", () => {\r\n  const productPage = new ProductPage();\r\n  let data;\r\n  let total: number = 0;\r\n  cy.get(\"table tr td:nth-child(4) strong\").each(($el, index, $list) => {\r\n    const amount = $el.text().replace(/[^a-zA-Z0-9]/g, \"\");\r\n    cy.log(amount);\r\n    total = total + Number(amount);\r\n    // let USDollar = new Intl.NumberFormat(\"en-IN\", {\r\n    //   style: \"currency\",\r\n    //   currency: \"INR\",\r\n    // });\r\n    // cy.log(USDollar.format(Number(amount)));\r\n  });\r\n  cy.get(\"h3 > strong\").then((totalText) => {\r\n    expect(totalText.text()).includes(total.toString());\r\n  });\r\n  productPage.getCheckOutButton().click();\r\n});\r\n\r\nThen(\"I place the order\", () => {\r\n  const productPage = new ProductPage();\r\n  productPage.getCountryDropDown().type(\"India\");\r\n  productPage.getDisplayedCountry().click();\r\n  productPage.getIAgreeCheckBox().check({ force: true });\r\n  productPage.getPurchaseButton().click();\r\n  productPage.getSuccessMessage().then((textMessage) => {\r\n    const message = textMessage.text();\r\n    expect(message.includes(\"Success!\")).to.be.true;\r\n  });\r\n});\r\n\r\nWhen(\"I fill the form\", () => {\r\n  const homePage = new HomePage();\r\n  homePage.getNameTextBox().type(data.name);\r\n  homePage.getTwoWayBindingEditBox().should(\"have.value\", data.name);\r\n  homePage.getNameTextBox().should(\"have.attr\", \"minlength\", \"2\");\r\n  homePage.getEmailTextBox().type(data.email);\r\n  homePage.getPasswordTextBox().type(data.password);\r\n  homePage.getCheckBox().check();\r\n});\r\n\r\nWhen(\"I verify forms behaviour\", () => {\r\n  const homePage = new HomePage();\r\n  homePage\r\n    .getGenderDropDown()\r\n    .select(data.gender)\r\n    .should(\"have.value\", data.gender);\r\n  homePage.getStudentRadioButton().click();\r\n  homePage.getEntrepreneurRadioButton().should(\"be.disabled\");\r\n  return true;\r\n});\r\n\r\nThen(\"I select the shop\", () => {\r\n  return true;\r\n});\r\n"]}