{"version":3,"sources":["commands.ts"],"names":[],"mappings":"AAAA,iCAAiC;AACjC,kDAAkD;AAClD,4CAA4C;AAC5C,+CAA+C;AAC/C,qBAAqB;AACrB,EAAE;AACF,4CAA4C;AAC5C,kCAAkC;AAClC,wCAAwC;AACxC,kDAAkD;AAClD,EAAE;AACF,EAAE;AACF,iCAAiC;AACjC,8DAA8D;AAC9D,EAAE;AACF,EAAE;AACF,gCAAgC;AAChC,yFAAyF;AACzF,EAAE;AACF,EAAE;AACF,+BAA+B;AAC/B,6FAA6F;AAC7F,EAAE;AACF,EAAE;AACF,gDAAgD;AAChD,6EAA6E;AAC7E,EAAE;AACF,mBAAmB;AACnB,wBAAwB;AACxB,4BAA4B;AAC5B,gEAAgE;AAChE,kFAAkF;AAClF,qFAAqF;AACrF,8GAA8G;AAC9G,QAAQ;AACR,MAAM;AACN,IAAI;AACJ,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAC,WAAW;IACjD,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CACxB,UAAC,GAAG,EAAE,KAAK,EAAE,KAAK;QACd,IAAI,WAAW,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YACnC,WAAW;YACX,EAAE,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAA;SAClD;IACL,CAAC,CACJ,CAAC;AACN,CAAC,CAAC,CAAA","file":"commands.js","sourcesContent":["/// <reference types=\"cypress\" />\n// ***********************************************\n// This example commands.ts shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n//\n//\n// -- This is a parent command --\n// Cypress.Commands.add('login', (email, password) => { ... })\n//\n//\n// -- This is a child command --\n// Cypress.Commands.add('drag', { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add('dismiss', { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite('visit', (originalFn, url, options) => { ... })\n//\n// declare global {\n//   namespace Cypress {\n//     interface Chainable {\n//       login(email: string, password: string): Chainable<void>\n//       drag(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\n//       dismiss(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\n//       visit(originalFn: CommandOriginalFn, url: string, options: Partial<VisitOptions>): Chainable<Element>\n//     }\n//   }\n// }\nCypress.Commands.add(\"addProductToCart\", (productName) => {\n    cy.get('h4.card-title').each(\n        ($el, index, $list) => {\n            let mobileModel = $el.text();\n            if (mobileModel.includes(productName)) {\n                // $el.next\n                cy.get('button.btn.btn-info').eq(index).click()\n            }\n        }\n    );\n})"]}